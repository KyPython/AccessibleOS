name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm@8

      - name: Install dependencies (workspaces)
        run: pnpm -w install --frozen-lockfile

      - name: Typecheck (no emit)
        run: pnpm -w exec tsc --noEmit

      - name: Run backend tests
        working-directory: ./packages/backend
        run: pnpm test

      - name: Quick backend smoke test
        working-directory: ./packages/backend
        env:
          AUTH_STUB: "true"
          DB_HOST: "127.0.0.1"
        run: |
          echo 'Skipping integration DB smoke in CI by default. Add explicit matrix with a postgres service if needed.'

  integration:
    runs-on: ubuntu-latest
    needs: build-and-test
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: accessibleos
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm@8

      - name: Install dependencies (workspaces)
        run: pnpm -w install --frozen-lockfile

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do pg_isready -h localhost -p 5432 -U postgres && break || sleep 1; done

      - name: Run DB migrations
        working-directory: ./packages/backend
        env:
          DB_HOST: 127.0.0.1
          DB_USER: postgres
          DB_PASSWORD: password
          DB_NAME: accessibleos
        run: pnpm db:migrate

      - name: Run backend integration tests
        working-directory: ./packages/backend
        env:
          DB_HOST: 127.0.0.1
          DB_USER: postgres
          DB_PASSWORD: password
          DB_NAME: accessibleos
          AUTH_STUB: "true"
          ENABLE_DEMO_SEED: "true"
        run: pnpm test

  web-smoke:
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm@8

      - name: Build web image
        run: |
          pnpm -w install --frozen-lockfile
          docker build -f packages/web/Dockerfile -t accessibleos-web:ci .

      - name: Run nginx smokepage
        run: |
          docker run --rm -d -p 8080:80 accessibleos-web:ci
          sleep 2
          curl -f http://localhost:8080 || (docker logs $(docker ps -lq) && exit 1)
